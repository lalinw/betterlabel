{"version":3,"sources":["Components/IngredientsMatchPage.js","Components/SummaryView.js","Components/ItemIngredients.js","Components/IngredientsTagPage.js","Components/AboutPage.js","Components/CommonIngredientsPage.js","App.js","index.js"],"names":["IngredientsMatchPage","props","state","leftInputString","leftInputArray","rightInputString","rightInputArray","itemFlagFormatter","bind","convertStringToArray","drawLines","handleLeftInput","handleRightInput","thisItem","flaggedItemsArray","i","length","toLowerCase","style","backgroundColor","borderColor","borderStyle","includes","listAsString","split","replaceAll","trimmed","push","trim","event","this","setState","target","value","a","b","matchingIndex","j","Fragment","className","id","placeholder","onChange","onClick","map","key","index","start","end","curveness","color","strokeWidth","showHead","headSize","Component","SummaryView","wanted","flagged","potentialFlag","inputArray","wantedItemsArray","ItemIngredients","undefined","IngredientsTagPage","c","wantedItemsString","flaggedItemsString","handleInput","handleWantedItems","handleFlaggedItems","inputString","AboutPage","CommonIngredientsPage","findCommonIngredients","commonIngredientsMap","Map","items","forEach","item","ingredients","has","nameArray","get","name","set","commonIngredientsMapSorted","entries","sort","console","log","ingredientsMap","commonIngredientsFormatter","startColor","endColor","RGBdiff","stepsPerc","rValue","Math","round","gValue","bValue","colorRGB","width","title","join","addItem","inputName","input","newItem","document","getElementById","prevState","alert","deleteItem","itemToDelete","currentTarget","newItemArray","filter","handleInputName","displayItem","mapKeys","Array","from","keys","App","pageDisplayReset","pageAbout","pageTag","pageMatch","pageCommon","disabled","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7dc8f828.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Xarrow from 'react-xarrows';\r\nimport './../App.css';\r\n\r\n\r\nclass IngredientsMatchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      leftInputString: \"\",\r\n      leftInputArray: [],\r\n      rightInputString: \"\",\r\n      rightInputArray: []\r\n\r\n    };\r\n    this.itemFlagFormatter = this.itemFlagFormatter.bind(this);\r\n    this.convertStringToArray = this.convertStringToArray.bind(this);\r\n    this.drawLines = this.drawLines.bind(this);\r\n    this.handleLeftInput = this.handleLeftInput.bind(this);\r\n    this.handleRightInput = this.handleRightInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ \r\n    //   leftInputArray: [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"],\r\n    //   rightInputArray: [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"]\r\n    // });\r\n  }\r\n\r\n  itemFlagFormatter(thisItem, flaggedItemsArray) {\r\n    for (let i = 0; i < flaggedItemsArray.length; i++) {\r\n      if (thisItem.toLowerCase() === flaggedItemsArray[i].toLowerCase()) {\r\n        //exact matches\r\n        return <div style={{backgroundColor: \"lightblue\", borderColor: \"red\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      } else if (thisItem.toLowerCase().includes(flaggedItemsArray[i].toLowerCase())) {\r\n        //contains matching phrase\r\n        return <div style={{backgroundColor: \"yellow\", borderColor: \"orange\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      }\r\n    }\r\n    return <div>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  convertStringToArray(listAsString) {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  handleLeftInput(event) {\r\n    this.setState({ leftInputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleRightInput(event) {\r\n    this.setState({ rightInputString: event.target.value });\r\n  }\r\n\r\n  drawLines() {\r\n    // var myLine = new LeaderLine(\r\n    //   document.getElementById('start'),\r\n    //   document.getElementById('destination')\r\n    // );\r\n  }\r\n\r\n  render() {\r\n    // var a = [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"];\r\n    // var b = [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"];\r\n    var a = this.state.leftInputArray\r\n    var b = this.state.rightInputArray;\r\n    var matchingIndex = [];\r\n    for (var i = 0; i < a.length; i++) {\r\n      matchingIndex[i] = -1; //defaults from no match\r\n      for (var j = 0; j < b.length; j++) {\r\n        if (a[i].toLowerCase() === b[j].toLowerCase()) {\r\n          matchingIndex[i] = j;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          \r\n        <div className=\"input-split\">  \r\n          <textarea \r\n              id=\"itemmMatch-left\"\r\n              placeholder=\"paste the list of ingredients here\"\r\n              onChange={this.handleLeftInput}\r\n              ></textarea>\r\n        </div>\r\n        <div className=\"input-split\">\r\n          <textarea \r\n            id=\"itemmMatch-right\"\r\n            placeholder=\"paste the list of ingredients here\"\r\n            onChange={this.handleRightInput}\r\n            ></textarea>\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            if (this.state.leftInputString !== \"\" && this.state.rightInputString) {\r\n              this.setState({\r\n                leftInputArray: this.convertStringToArray(this.state.leftInputString),\r\n                rightInputArray: this.convertStringToArray(this.state.rightInputString)\r\n              });\r\n            }\r\n            \r\n          }}\r\n          >Match product ingredients</button>\r\n\r\n          <div>\r\n            <div className=\"ingredients-matching\" id=\"left\" >\r\n              {a.map((key, index) => <div className=\"ingredients\" id={\"left\" + index} >{key}</div>)}\r\n            </div>\r\n\r\n            {/* TODO: Insert the lines after both div sides have been drawn */}\r\n            <div className=\"ingredients-matching\" id=\"canvas\">\r\n              {matchingIndex.map((key, index) => {\r\n                if (key !== -1) {\r\n                  return <Xarrow start={\"left\" + index} end={\"right\" + key} \r\n                            curveness=\"0\" \r\n                            color=\"cornflowerblue\"\r\n                            strokeWidth=\"2\"\r\n                            showHead={false}\r\n                            headSize=\"0\"\r\n                          />;\r\n                }\r\n                return 0;\r\n              })}\r\n            </div>\r\n            \r\n            <div className=\"ingredients-matching\" id=\"right\" >\r\n              {b.map((key, index) => <div className=\"ingredients\" id={\"right\" + index} >{key}</div>)}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* {matchingIndex.map(i => <div>{i}</div>)} */}\r\n\r\n\r\n\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsMatchPage;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\nclass SummaryView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    var wanted = 0;\r\n    var flagged = 0;\r\n    var potentialFlag = 0;\r\n\r\n    for (let i = 0; i < this.props.inputArray.length; i++) {\r\n      for (let j = 0; j < this.props.wantedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.wantedItemsArray[j].toLowerCase())) {\r\n          wanted++;\r\n        }\r\n      }\r\n      for (let j = 0; j < this.props.flaggedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          flagged++;\r\n        } else if (this.props.inputArray[i].toLowerCase().includes(this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          potentialFlag++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"summary\">\r\n          {this.props.inputArray.length !== 0\r\n          ? \r\n          <React.Fragment>\r\n            <div className=\"summary-stats\" id=\"stats-input\">\r\n              <h3>Total ingredients</h3>\r\n              <h2>{this.props.inputArray.length}</h2>\r\n            </div>\r\n            <div className=\"summary-stats\" id=\"stats-wanted\">\r\n              <h3>Desired ingredients</h3>\r\n              <h2>{wanted}</h2> \r\n              <p>out of {this.props.wantedItemsArray.length} found</p>\r\n            </div>\r\n            <div className=\"summary-stats\" id=\"stats-flagged\">\r\n              <h3>Flagged ingredients</h3>\r\n              <h2>{flagged}</h2>\r\n              <p>out of {this.props.flaggedItemsArray.length} flagged</p>\r\n              <p>({potentialFlag} potentially unwanted items)</p>\r\n            </div>\r\n          </React.Fragment>\r\n          : <p>Summary cannot be displayed until there is an ingredients list.</p>\r\n          }\r\n          \r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SummaryView;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\n\r\nclass ItemIngredients extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.itemFlagFormatter = this.itemFlagFormatter.bind(this);\r\n  }\r\n\r\n  itemFlagFormatter(thisItem) {\r\n    if (this.props.flaggedItemsArray !== undefined) {\r\n      for (let i = 0; i < this.props.flaggedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === this.props.flaggedItemsArray[i].toLowerCase()) {\r\n          //exact matches\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"red\"}}>{thisItem}</div>;\r\n        } else if (this.props.flaggedItemsArray[i] !== \"\" && thisItem.toLowerCase().includes(this.props.flaggedItemsArray[i].toLowerCase())) {\r\n          //contains matching phrase\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"orange\"}}>{thisItem}</div>;\r\n        } \r\n      }\r\n    }\r\n    if (this.props.wantedItemsArray !== undefined) { \r\n      for (let i = 0; i < this.props.wantedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === (this.props.wantedItemsArray[i].toLowerCase())) {\r\n          //exact matches\r\n          return <div className=\"ingredients wanted\" style={{borderColor: \"green\"}}>{thisItem}</div>;\r\n        }\r\n      }\r\n    }\r\n    return <div className=\"ingredients\" style={{borderColor: \"aliceblue\"}}>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.inputArray !== undefined && this.props.inputArray.length > 0 &&\r\n        <div id=\"ingredients-list\">\r\n          {this.props.inputArray.map((i) => this.itemFlagFormatter(i))}\r\n        </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemIngredients;\r\n","import React, { Component } from 'react';\r\nimport SummaryView from './SummaryView';\r\nimport ItemIngredients from './ItemIngredients'\r\n\r\nclass IngredientsTagPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      c: \"\",\r\n      inputArray: [],\r\n      wantedItemsString: \"\",\r\n      wantedItemsArray: [],\r\n      flaggedItemsString: \"\",\r\n      flaggedItemsArray: [],\r\n    };\r\n    this.convertStringToArray = this.convertStringToArray.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleWantedItems = this.handleWantedItems.bind(this);\r\n    this.handleFlaggedItems = this.handleFlaggedItems.bind(this);\r\n  }\r\n\r\n\r\n  convertStringToArray(listAsString) {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  handleInput(event) {\r\n    this.setState({ inputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleWantedItems(event) {\r\n    this.setState({ wantedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  handleFlaggedItems(event) {\r\n    this.setState({ flaggedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"input\" id=\"input\">\r\n      <textarea \r\n        id=\"textarea-input\"\r\n        placeholder=\"paste the list of ingredients here\"\r\n        onChange={this.handleInput}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-wanted\">\r\n        <textarea \r\n          id=\"textarea-input-wanted\"\r\n          placeholder=\"paste wanted ingredients here\"\r\n          onChange={this.handleWantedItems}\r\n          ></textarea>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-flagged\">\r\n        <textarea \r\n          id=\"textarea-input-flagged\"\r\n          placeholder=\"paste unwanted ingredients here\"\r\n          onChange={this.handleFlaggedItems}\r\n          ></textarea>\r\n      </div>\r\n      <button\r\n          onClick={() => {\r\n            if (this.state.inputString !== \"\") {\r\n              this.setState({\r\n                inputArray: this.convertStringToArray(this.state.inputString),\r\n                wantedItemsArray: this.convertStringToArray(this.state.wantedItemsString),\r\n                flaggedItemsArray: this.convertStringToArray(this.state.flaggedItemsString)\r\n              });\r\n            }\r\n            \r\n          }}\r\n          >Tag my Ingredients</button>\r\n      <div className=\"result\">\r\n        <h3>Product Summary:</h3>\r\n        <SummaryView\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n          />\r\n        <ItemIngredients\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n        />\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsTagPage;\r\n","import React, { Component } from 'react';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Welcome to BetterLabel™!</h2>\r\n        <p>BetterLabel™ is here to help reading labels easier than before.</p>\r\n        <div>\r\n          BetterLabel™ can help you:\r\n          <ul>\r\n            <li><strong>tag wanted and unwanted ingredients</strong> from an ingredients list</li>\r\n            <li><strong>compare ingredients</strong> between 2 products</li>\r\n            <li><strong>find common ingredients</strong> between unlimited number of products</li>\r\n          </ul>\r\n          <br/>\r\n          See the FAQ section on how to use BetterLabel™ 😊\r\n        </div>\r\n\r\n        <div>\r\n          Q. How do I tag ingredients from a list?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n          <br/>\r\n          Q. How do I compare ingredients between products?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n          <br/>\r\n          Q. How do I find common ingredients from multiple products?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n          <br/>\r\n          Q. Is my data being sent anywhere?\r\n          <br/>\r\n          A. No. BetterLabel™ is a client-based website developed using ReactJS. The calculations are all made on your browser, so no data is being exchanged to any remote server.\r\n          <br/>\r\n\r\n\r\n        </div>\r\n        \r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AboutPage;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\n\r\nclass CommonIngredientsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //items: [{}]\r\n      // {name: \"\", ingredients: [a, b, c...]}\r\n      items: [],\r\n      ingredientsMap: new Map(),\r\n      input: \"\",\r\n      inputName: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  findCommonIngredients = () => {\r\n    var commonIngredientsMap = new Map();\r\n    this.state.items.forEach(item => {\r\n      var keys = item.ingredients;\r\n      keys.forEach(key => {\r\n        if (commonIngredientsMap.has(key)) {\r\n          var nameArray = commonIngredientsMap.get(key);\r\n          nameArray.push(item.name);\r\n          commonIngredientsMap.set(key, nameArray);\r\n        } else {\r\n          commonIngredientsMap.set(key, [item.name]);\r\n        }\r\n      })\r\n    })\r\n    // sort by descending value\r\n    const commonIngredientsMapSorted = new Map(\r\n      [...commonIngredientsMap.entries()].sort((a, b) => b[1].length - a[1].length)\r\n    );\r\n    console.log(commonIngredientsMapSorted);\r\n    this.setState({ ingredientsMap: commonIngredientsMapSorted });\r\n\r\n    this.state.ingredientsMap.forEach((item) => console.log(this.state.ingredientsMap.get(item.key)));\r\n  }\r\n\r\n \r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  commonIngredientsFormatter = (thisItem) => {\r\n    //color in rgb() format\r\n    const startColor = [255,255,255]; // color for least common\r\n    const endColor = [31,147,213]; // color for most common\r\n    var RGBdiff = [\r\n      endColor[0] - startColor[0],\r\n      endColor[1] - startColor[1],\r\n      endColor[2] - startColor[2]\r\n    ];\r\n    \r\n    var stepsInt = this.state.items.length; //the number of steps in the gradient\r\n    var stepsPerc = 100 / (stepsInt); //the percentage representation of the step\r\n\r\n    var i = this.state.ingredientsMap.get(thisItem).length;\r\n    var rValue = (RGBdiff[0] > 0) \r\n    ? Math.round(RGBdiff[0] / 100 * (stepsPerc * (i - 1)))\r\n    : Math.round((startColor[0] + (RGBdiff[0]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    var gValue = (RGBdiff[1] > 0) \r\n      ? Math.round(RGBdiff[1] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[1] + (RGBdiff[1]) / 100 * (stepsPerc * (i - 1))));\r\n      \r\n    var bValue = (RGBdiff[2] > 0) \r\n      ? Math.round(RGBdiff[2] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[2] + (RGBdiff[2]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    console.log(rValue + \"-\" + gValue + \"-\" + bValue);\r\n    var colorRGB = \"rgb(\" + rValue + ',' + gValue + ',' + bValue + \")\";\r\n    console.log(colorRGB);\r\n\r\n    return (\r\n      <div className=\"ingredients commontooltip\" style={{borderColor: \"aliceblue\", backgroundColor: colorRGB, width: \"30em\"}} title={i + \" source item(s): \" + this.state.ingredientsMap.get(thisItem).join(', ')}>\r\n        {thisItem}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  addItem = () => {\r\n    if (this.state.inputName !== \"\" && this.state.input !== \"\") {\r\n      var itemName = this.state.inputName; \r\n      var ingredientsArray = this.convertStringToArray(this.state.input);\r\n      const newItem = {\r\n        name: itemName,\r\n        ingredients: ingredientsArray\r\n      };\r\n\r\n      document.getElementById(\"commoningredients-name\").value = '';\r\n      document.getElementById(\"commoningredients-input\").value = '';\r\n\r\n      this.setState( prevState => ({ \r\n        items: [...prevState.items, newItem]\r\n      }), () => {\r\n        this.findCommonIngredients()\r\n      });\r\n    } else {\r\n      alert(\"Please input name AND ingredients list to add item\");\r\n    }\r\n    \r\n  }\r\n\r\n  deleteItem = (event) => {\r\n    var itemToDelete = event.currentTarget.value;\r\n    // console.log(itemToDelete);\r\n    const newItemArray = this.state.items.filter((thisItem) => thisItem.name !== itemToDelete);\r\n    this.setState({ \r\n      items: newItemArray \r\n    }, () => {\r\n      this.findCommonIngredients()\r\n    });\r\n  }\r\n\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n\r\n  handleInputName = (event) => {\r\n    this.setState({ inputName: event.target.value });\r\n  }\r\n\r\n  \r\n  displayItem = (item) => {\r\n    return (\r\n      <div key={item.name} className=\"commonIngredientItem\">\r\n        <div>\r\n          {item.name}\r\n          <button value={item.name} onClick={this.deleteItem}>delete</button>\r\n        </div>\r\n        \r\n        {/* <div>[{item.ingredients.join(\", \")}]</div> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let mapKeys = Array.from( this.state.ingredientsMap.keys() );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          {this.state.items.map((item) => this.displayItem(item))}\r\n        </div>\r\n          \r\n        <div>\r\n          <input\r\n            id=\"commoningredients-name\"\r\n            placeholder=\"item name\"\r\n            onChange={this.handleInputName}\r\n            ></input>\r\n          <textarea \r\n            id=\"commoningredients-input\"\r\n            placeholder=\"place list of ingredients\"\r\n            onChange={this.handleInput}\r\n            ></textarea>\r\n          <button \r\n            onClick={this.addItem}\r\n            >Add this Item</button>\r\n        </div>\r\n        \r\n        <div className=\"result\">\r\n          <h3>Common ingredients in descending order:</h3>\r\n          {this.state.items.length !== 0\r\n            ? <p>hover on each ingredient to see source item(s)</p>\r\n            : <p><i>no ingredients to display</i></p>\r\n          }\r\n          {this.state.ingredientsMap.length !== 0 &&\r\n          mapKeys.map((item) => this.commonIngredientsFormatter(item))}\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={this.findCommonIngredients}>find common ingredients</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CommonIngredientsPage;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport IngredientsMatchPage from './Components/IngredientsMatchPage';\nimport IngredientsTagPage from './Components/IngredientsTagPage';\nimport AboutPage from './Components/AboutPage';\nimport CommonIngredientsPage from './Components/CommonIngredientsPage';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pageAbout: true,\n      pageTag: false,\n      pageMatch: false,\n      pageCommon: false      \n    };\n  }\n\n  pageDisplayReset = () => {\n    this.setState({\n      pageAbout: false,\n      pageTag: false,\n      pageMatch: false,\n      pageCommon: false  \n    });\n  }\n\n  render() {\n    \n    return (\n      <React.Fragment>\n        <div><h1>BetterLabel™</h1></div>\n        <div id=\"\">\n          <button \n            disabled={this.state.pageAbout}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageAbout: true });\n          }}>About</button>\n          <button \n            disabled={this.state.pageTag}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageTag: true });\n          }}>Tag my Ingredients</button>\n          <button \n            disabled={this.state.pageMatch}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageMatch: true });\n          }}>Compare Products</button>\n          <button \n            disabled={this.state.pageCommon}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageCommon: true });\n          }}>Find Common Ingredients</button>\n        </div>\n        {this.state.pageAbout && <AboutPage/>}\n        {this.state.pageTag && <IngredientsTagPage/>}\n        {this.state.pageMatch && <IngredientsMatchPage/>}\n        {this.state.pageCommon && <CommonIngredientsPage/>}\n\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
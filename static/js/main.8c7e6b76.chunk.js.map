{"version":3,"sources":["Components/IngredientsMatchPage.js","Components/SummaryView.js","Components/ItemIngredients.js","Components/IngredientsTagPage.js","Components/AboutPage.js","Components/CommonIngredientsPage.js","App.js","index.js"],"names":["IngredientsMatchPage","props","handleLeftInputName","event","setState","leftInputName","target","value","handleRightInputName","rightInputName","state","leftInputString","leftInputArray","rightInputString","rightInputArray","itemFlagFormatter","bind","convertStringToArray","drawLines","handleLeftInput","handleRightInput","thisItem","flaggedItemsArray","i","length","toLowerCase","style","backgroundColor","borderColor","borderStyle","includes","listAsString","split","replaceAll","trimmed","push","trim","this","a","b","matchingIndex","j","Fragment","className","id","placeholder","onChange","onClick","alert","map","key","index","start","end","curveness","color","strokeWidth","showHead","headSize","Component","SummaryView","wanted","flagged","potentialFlag","inputArray","wantedItemsArray","ItemIngredients","undefined","IngredientsTagPage","inputString","wantedItemsString","flaggedItemsString","handleInput","handleWantedItems","handleFlaggedItems","AboutPage","CommonIngredientsPage","findCommonIngredients","commonIngredientsMap","Map","items","forEach","item","ingredients","has","nameArray","get","name","set","commonIngredientsMapSorted","entries","sort","console","log","ingredientsMap","commonIngredientsFormatter","startColor","endColor","RGBdiff","stepsPerc","rValue","Math","round","gValue","bValue","colorRGB","width","title","join","addItem","inputName","input","newItem","document","getElementById","prevState","deleteItem","itemToDelete","currentTarget","newItemArray","filter","handleInputName","displayItem","display","overflowWrap","verticalAlign","mapKeys","Array","from","keys","App","pageDisplayReset","pageAbout","pageTag","pageMatch","pageCommon","disabled","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8c7e6b76.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Xarrow from 'react-xarrows';\r\nimport './../App.css';\r\n\r\n\r\nclass IngredientsMatchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      leftInputString: \"\",\r\n      leftInputArray: [],\r\n      rightInputString: \"\",\r\n      rightInputArray: [],\r\n      leftInputName: \"Item A\",\r\n      rightInputName: \"Item B\"\r\n    };\r\n    this.itemFlagFormatter = this.itemFlagFormatter.bind(this);\r\n    this.convertStringToArray = this.convertStringToArray.bind(this);\r\n    this.drawLines = this.drawLines.bind(this);\r\n    this.handleLeftInput = this.handleLeftInput.bind(this);\r\n    this.handleRightInput = this.handleRightInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ \r\n    //   leftInputArray: [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"],\r\n    //   rightInputArray: [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"]\r\n    // });\r\n  }\r\n\r\n  itemFlagFormatter(thisItem, flaggedItemsArray) {\r\n    for (let i = 0; i < flaggedItemsArray.length; i++) {\r\n      if (thisItem.toLowerCase() === flaggedItemsArray[i].toLowerCase()) {\r\n        //exact matches\r\n        return <div style={{backgroundColor: \"lightblue\", borderColor: \"red\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      } else if (thisItem.toLowerCase().includes(flaggedItemsArray[i].toLowerCase())) {\r\n        //contains matching phrase\r\n        return <div style={{backgroundColor: \"yellow\", borderColor: \"orange\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      }\r\n    }\r\n    return <div>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  convertStringToArray(listAsString) {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n  handleLeftInputName = (event) => {\r\n    this.setState({ leftInputName: event.target.value });\r\n  }\r\n\r\n  handleRightInputName = (event) => {\r\n    this.setState({ rightInputName: event.target.value });\r\n  }\r\n\r\n  handleLeftInput(event) {\r\n    this.setState({ leftInputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleRightInput(event) {\r\n    this.setState({ rightInputString: event.target.value });\r\n  }\r\n\r\n  drawLines() {\r\n    // var myLine = new LeaderLine(\r\n    //   document.getElementById('start'),\r\n    //   document.getElementById('destination')\r\n    // );\r\n  }\r\n\r\n  render() {\r\n    // var a = [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"];\r\n    // var b = [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"];\r\n    var a = this.state.leftInputArray\r\n    var b = this.state.rightInputArray;\r\n    var matchingIndex = [];\r\n    for (var i = 0; i < a.length; i++) {\r\n      matchingIndex[i] = -1; //defaults from no match\r\n      for (var j = 0; j < b.length; j++) {\r\n        if (a[i].toLowerCase() === b[j].toLowerCase()) {\r\n          matchingIndex[i] = j;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          \r\n        <div className=\"input-split\">  \r\n          <input\r\n            id=\"itemmMatch-left-name\"\r\n            placeholder=\"item name\"\r\n            onChange={this.handleLeftInputName}\r\n            ></input>\r\n          <textarea \r\n              id=\"itemmMatch-left\"\r\n              placeholder=\"paste the list of ingredients here\"\r\n              onChange={this.handleLeftInput}\r\n              ></textarea>\r\n        </div>\r\n        <div className=\"input-split\">\r\n          <input\r\n            id=\"itemmMatch-right-name\"\r\n            placeholder=\"item name\"\r\n            onChange={this.handleRightInputName}\r\n            ></input>\r\n          <textarea \r\n            id=\"itemmMatch-right\"\r\n            placeholder=\"paste the list of ingredients here\"\r\n            onChange={this.handleRightInput}\r\n            ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"compute-button\"\r\n          onClick={() => {\r\n            if (this.state.leftInputString !== \"\" && this.state.rightInputString) {\r\n              this.setState({\r\n                leftInputArray: this.convertStringToArray(this.state.leftInputString),\r\n                rightInputArray: this.convertStringToArray(this.state.rightInputString)\r\n              });\r\n            } else {\r\n              alert(\"Remember to input 2 ingredients lists\");\r\n            }\r\n            \r\n          }}\r\n          >Match product ingredients</button>\r\n\r\n          <div className=\"result\">\r\n            <div className=\"ingredients-matching\" id=\"left\" >\r\n              {matchingIndex.length > 0 && <h2>{this.state.leftInputName}</h2>}\r\n              {a.map((key, index) => <div className=\"ingredients\" id={\"left\" + index} >{key}</div>)}\r\n            </div>\r\n\r\n            {/* TODO: Insert the lines after both div sides have been drawn */}\r\n            <div className=\"ingredients-matching\" id=\"canvas\">\r\n              \r\n              {matchingIndex.map((key, index) => {\r\n                if (key !== -1) {\r\n                  return <Xarrow start={\"left\" + index} end={\"right\" + key} \r\n                            curveness=\"0\" \r\n                            color=\"cornflowerblue\"\r\n                            strokeWidth=\"2\"\r\n                            showHead={false}\r\n                            headSize=\"0\"\r\n                          />;\r\n                }\r\n                return null;\r\n              })}\r\n            </div>\r\n            \r\n            <div className=\"ingredients-matching\" id=\"right\" >\r\n            {matchingIndex.length > 0 && <h2>{this.state.rightInputName}</h2>}\r\n              {b.map((key, index) => <div className=\"ingredients\" id={\"right\" + index} >{key}</div>)}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsMatchPage;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\nclass SummaryView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    var wanted = 0;\r\n    var flagged = 0;\r\n    var potentialFlag = 0;\r\n\r\n    for (let i = 0; i < this.props.inputArray.length; i++) {\r\n      for (let j = 0; j < this.props.wantedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.wantedItemsArray[j].toLowerCase())) {\r\n          wanted++;\r\n        }\r\n      }\r\n      for (let j = 0; j < this.props.flaggedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          flagged++;\r\n        } else if (this.props.inputArray[i].toLowerCase().includes(this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          potentialFlag++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"summary\">\r\n          {this.props.inputArray.length !== 0\r\n          ? \r\n          <React.Fragment>\r\n            <div className=\"summary-stats\" id=\"stats-input\">\r\n              <h3>Total ingredients</h3>\r\n              <h2>{this.props.inputArray.length}</h2>\r\n            </div>\r\n            <div className=\"summary-stats\" id=\"stats-wanted\">\r\n              <h3>Desired ingredients</h3>\r\n              <h2>{wanted}</h2> \r\n              <p>out of {this.props.wantedItemsArray.length} found</p>\r\n            </div>\r\n            <div className=\"summary-stats\" id=\"stats-flagged\">\r\n              <h3>Flagged ingredients</h3>\r\n              <h2>{flagged}</h2>\r\n              <p>out of {this.props.flaggedItemsArray.length} flagged</p>\r\n              <p>({potentialFlag} potentially unwanted items)</p>\r\n            </div>\r\n          </React.Fragment>\r\n          : <p>Summary cannot be displayed until there is an ingredients list.</p>\r\n          }\r\n          \r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SummaryView;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\n\r\nclass ItemIngredients extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.itemFlagFormatter = this.itemFlagFormatter.bind(this);\r\n  }\r\n\r\n  itemFlagFormatter(thisItem) {\r\n    if (this.props.flaggedItemsArray !== undefined) {\r\n      for (let i = 0; i < this.props.flaggedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === this.props.flaggedItemsArray[i].toLowerCase()) {\r\n          //exact matches\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"red\"}}>{thisItem}</div>;\r\n        } else if (this.props.flaggedItemsArray[i] !== \"\" && thisItem.toLowerCase().includes(this.props.flaggedItemsArray[i].toLowerCase())) {\r\n          //contains matching phrase\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"orange\"}}>{thisItem}</div>;\r\n        } \r\n      }\r\n    }\r\n    if (this.props.wantedItemsArray !== undefined) { \r\n      for (let i = 0; i < this.props.wantedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === (this.props.wantedItemsArray[i].toLowerCase())) {\r\n          //exact matches\r\n          return <div className=\"ingredients wanted\" style={{borderColor: \"green\"}}>{thisItem}</div>;\r\n        }\r\n      }\r\n    }\r\n    return <div className=\"ingredients\" style={{borderColor: \"aliceblue\"}}>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.inputArray !== undefined && this.props.inputArray.length > 0 &&\r\n        <div id=\"ingredients-list\">\r\n          {this.props.inputArray.map((i) => this.itemFlagFormatter(i))}\r\n        </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemIngredients;\r\n","import React, { Component } from 'react';\r\nimport SummaryView from './SummaryView';\r\nimport ItemIngredients from './ItemIngredients'\r\n\r\nclass IngredientsTagPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputString: \"\",\r\n      inputArray: [],\r\n      wantedItemsString: \"\",\r\n      wantedItemsArray: [],\r\n      flaggedItemsString: \"\",\r\n      flaggedItemsArray: [],\r\n    };\r\n    this.convertStringToArray = this.convertStringToArray.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleWantedItems = this.handleWantedItems.bind(this);\r\n    this.handleFlaggedItems = this.handleFlaggedItems.bind(this);\r\n  }\r\n\r\n\r\n  convertStringToArray(listAsString) {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  handleInput(event) {\r\n    this.setState({ inputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleWantedItems(event) {\r\n    this.setState({ wantedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  handleFlaggedItems(event) {\r\n    this.setState({ flaggedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"input\" id=\"input\">\r\n      <textarea \r\n        id=\"textarea-input\"\r\n        placeholder=\"paste the list of ingredients here\"\r\n        onChange={this.handleInput}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-wanted\">\r\n        <textarea \r\n          id=\"textarea-input-wanted\"\r\n          placeholder=\"paste wanted ingredients here\"\r\n          onChange={this.handleWantedItems}\r\n          ></textarea>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-flagged\">\r\n        <textarea \r\n          id=\"textarea-input-flagged\"\r\n          placeholder=\"paste unwanted ingredients here\"\r\n          onChange={this.handleFlaggedItems}\r\n          ></textarea>\r\n      </div>\r\n      <button\r\n        className=\"compute-button\"\r\n        onClick={() => {\r\n          if (this.state.inputString !== \"\") {\r\n            this.setState({ inputArray: this.convertStringToArray(this.state.inputString) });\r\n            if (this.state.wantedItemsString !== \"\") {\r\n              this.setState({ wantedItemsArray: this.convertStringToArray(this.state.wantedItemsString) });\r\n            }\r\n            if (this.state.flaggedItemsString !== \"\") {\r\n              this.setState({ flaggedItemsArray: this.convertStringToArray(this.state.flaggedItemsString) });\r\n            }\r\n          } else {\r\n            alert(\"Remember to input an ingredients list\");\r\n          }\r\n          \r\n        }}\r\n        >Tag my Ingredients</button>\r\n      <div className=\"result\">\r\n        <h3>Product Summary:</h3>\r\n        <SummaryView\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n          />\r\n        <ItemIngredients\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n        />\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsTagPage;\r\n","import React, { Component } from 'react';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Welcome to BetterLabel™!</h2>\r\n        <p>BetterLabel™ is here to help reading labels easier than before.</p>\r\n        <div>\r\n          BetterLabel™ can help you:\r\n          <ul>\r\n            <li><strong>tag wanted and unwanted ingredients</strong> from an ingredients list</li>\r\n            <li><strong>compare ingredients</strong> between 2 products</li>\r\n            <li><strong>find common ingredients</strong> between unlimited number of products</li>\r\n          </ul>\r\n          <br/>\r\n          See the FAQ section on how to use BetterLabel™ 😊\r\n        </div>\r\n\r\n        <div>\r\n          Q. Is my data being sent anywhere?\r\n          <br/>\r\n          A. No. BetterLabel™ is a client-based website developed using ReactJS. The calculations are all made on your browser, so no data is being exchanged to any remote server.\r\n          <br/>\r\n          <br/>\r\n          Q. How do I tag ingredients from a list?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n          <br/>\r\n          Q. How do I compare ingredients between products?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n          <br/>\r\n          Q. How do I find common ingredients from multiple products?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n\r\n        </div>\r\n        \r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AboutPage;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\n\r\nclass CommonIngredientsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //items: [{}]\r\n      // {name: \"\", ingredients: [a, b, c...]}\r\n      items: [],\r\n      ingredientsMap: new Map(),\r\n      input: \"\",\r\n      inputName: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  findCommonIngredients = () => {\r\n    var commonIngredientsMap = new Map();\r\n    this.state.items.forEach(item => {\r\n      var keys = item.ingredients;\r\n      keys.forEach(key => {\r\n        if (commonIngredientsMap.has(key)) {\r\n          var nameArray = commonIngredientsMap.get(key);\r\n          nameArray.push(item.name);\r\n          commonIngredientsMap.set(key, nameArray);\r\n        } else {\r\n          commonIngredientsMap.set(key, [item.name]);\r\n        }\r\n      })\r\n    })\r\n    // sort by descending value\r\n    const commonIngredientsMapSorted = new Map(\r\n      [...commonIngredientsMap.entries()].sort((a, b) => b[1].length - a[1].length)\r\n    );\r\n    console.log(commonIngredientsMapSorted);\r\n    this.setState({ ingredientsMap: commonIngredientsMapSorted });\r\n\r\n    this.state.ingredientsMap.forEach((item) => console.log(this.state.ingredientsMap.get(item.key)));\r\n  }\r\n\r\n \r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  commonIngredientsFormatter = (thisItem) => {\r\n    //color in rgb() format\r\n    const startColor = [255,255,255]; // color for least common\r\n    const endColor = [31,147,213]; // color for most common\r\n    var RGBdiff = [\r\n      endColor[0] - startColor[0],\r\n      endColor[1] - startColor[1],\r\n      endColor[2] - startColor[2]\r\n    ];\r\n    \r\n    var stepsInt = this.state.items.length; //the number of steps in the gradient\r\n    var stepsPerc = 100 / (stepsInt); //the percentage representation of the step\r\n\r\n    var i = this.state.ingredientsMap.get(thisItem).length;\r\n    var rValue = (RGBdiff[0] > 0) \r\n    ? Math.round(RGBdiff[0] / 100 * (stepsPerc * (i - 1)))\r\n    : Math.round((startColor[0] + (RGBdiff[0]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    var gValue = (RGBdiff[1] > 0) \r\n      ? Math.round(RGBdiff[1] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[1] + (RGBdiff[1]) / 100 * (stepsPerc * (i - 1))));\r\n      \r\n    var bValue = (RGBdiff[2] > 0) \r\n      ? Math.round(RGBdiff[2] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[2] + (RGBdiff[2]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    console.log(rValue + \"-\" + gValue + \"-\" + bValue);\r\n    var colorRGB = \"rgb(\" + rValue + ',' + gValue + ',' + bValue + \")\";\r\n    console.log(colorRGB);\r\n\r\n    return (\r\n      <div className=\"ingredients commontooltip\" style={{borderColor: \"aliceblue\", backgroundColor: colorRGB, width: \"30em\"}} title={i + \" source item(s): \" + this.state.ingredientsMap.get(thisItem).join(', ')}>\r\n        {thisItem}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  addItem = () => {\r\n    if (this.state.inputName !== \"\" && this.state.input !== \"\") {\r\n      var itemName = this.state.inputName; \r\n      var ingredientsArray = this.convertStringToArray(this.state.input);\r\n      const newItem = {\r\n        name: itemName,\r\n        ingredients: ingredientsArray\r\n      };\r\n\r\n      document.getElementById(\"commoningredients-name\").value = '';\r\n      document.getElementById(\"commoningredients-input\").value = '';\r\n\r\n      this.setState( prevState => ({ \r\n        items: [...prevState.items, newItem],\r\n        input: \"\",\r\n        inputName: \"\"\r\n      }), () => {\r\n        this.findCommonIngredients()\r\n      });\r\n    } else {\r\n      alert(\"Please input name AND ingredients list to add item\");\r\n    }\r\n    \r\n  }\r\n\r\n  deleteItem = (event) => {\r\n    var itemToDelete = event.currentTarget.value;\r\n    // console.log(itemToDelete);\r\n    const newItemArray = this.state.items.filter((thisItem) => thisItem.name !== itemToDelete);\r\n    this.setState({ \r\n      items: newItemArray \r\n    }, () => {\r\n      this.findCommonIngredients()\r\n    });\r\n  }\r\n\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n\r\n  handleInputName = (event) => {\r\n    this.setState({ inputName: event.target.value });\r\n  }\r\n\r\n  \r\n  displayItem = (item) => {\r\n    return (\r\n      <div key={item.name} className=\"commonIngredientItem\">\r\n        <div style={{display: \"inline-block\", width: \"90%\", overflowWrap: \"break-word\", verticalAlign: \"top\"}}>\r\n          {item.name} \r\n        </div>\r\n        <div style={{display: \"inline-block\", width: \"10%\"}}><button value={item.name} onClick={this.deleteItem}><HighlightOffIcon/></button></div>\r\n        \r\n        {/* <div>[{item.ingredients.join(\", \")}]</div> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let mapKeys = Array.from( this.state.ingredientsMap.keys() );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          {this.state.items.map((item) => this.displayItem(item))}\r\n        </div>\r\n          \r\n        <div>\r\n          <input\r\n            id=\"commoningredients-name\"\r\n            placeholder=\"item name\"\r\n            onChange={this.handleInputName}\r\n            ></input>\r\n          <textarea \r\n            id=\"commoningredients-input\"\r\n            placeholder=\"place list of ingredients\"\r\n            onChange={this.handleInput}\r\n            ></textarea>\r\n          <button \r\n            className=\"compute-button\"\r\n            onClick={this.addItem}\r\n            >Add this Item</button>\r\n        </div>\r\n        \r\n        <div className=\"result\">\r\n          <h3>Common ingredients in descending order:</h3>\r\n          {this.state.items.length !== 0\r\n            ? <p>hover on each ingredient to see source item(s)</p>\r\n            : <p><i>no ingredients to display</i></p>\r\n          }\r\n          {this.state.ingredientsMap.length !== 0 &&\r\n          mapKeys.map((item) => this.commonIngredientsFormatter(item))}\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CommonIngredientsPage;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport IngredientsMatchPage from './Components/IngredientsMatchPage';\nimport IngredientsTagPage from './Components/IngredientsTagPage';\nimport AboutPage from './Components/AboutPage';\nimport CommonIngredientsPage from './Components/CommonIngredientsPage';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pageAbout: true,\n      pageTag: false,\n      pageMatch: false,\n      pageCommon: false      \n    };\n  }\n\n  pageDisplayReset = () => {\n    this.setState({\n      pageAbout: false,\n      pageTag: false,\n      pageMatch: false,\n      pageCommon: false  \n    });\n  }\n\n  render() {\n    \n    return (\n      <React.Fragment>\n        <div><h1>BetterLabel™</h1></div>\n        <div id=\"\">\n          <button \n            disabled={this.state.pageAbout}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageAbout: true });\n          }}>About</button>\n          <button \n            disabled={this.state.pageTag}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageTag: true });\n          }}>Tag my Ingredients</button>\n          <button \n            disabled={this.state.pageMatch}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageMatch: true });\n          }}>Compare Products</button>\n          <button \n            disabled={this.state.pageCommon}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageCommon: true });\n          }}>Find Common Ingredients</button>\n        </div>\n        <div id=\"content\">\n          {this.state.pageAbout && <AboutPage/>}\n          {this.state.pageTag && <IngredientsTagPage/>}\n          {this.state.pageMatch && <IngredientsMatchPage/>}\n          {this.state.pageCommon && <CommonIngredientsPage/>}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["Components/IngredientsMatchPage.js","Components/SummaryView.js","Components/ItemIngredients.js","Components/IngredientsTagPage.js","Components/AboutPage.js","Components/CommonIngredientsPage.js","App.js","index.js"],"names":["IngredientsMatchPage","Component","constructor","props","super","this","itemFlagFormatter","thisItem","flaggedItemsArray","i","length","toLowerCase","React","createElement","style","backgroundColor","borderColor","borderStyle","includes","convertStringToArray","listAsString","split","replaceAll","trimmed","push","trim","handleLeftInputName","event","setState","leftInputName","target","value","handleRightInputName","rightInputName","handleLeftInput","leftInputString","handleRightInput","rightInputString","state","leftInputArray","rightInputArray","componentDidMount","render","a","b","matchingIndex","j","Fragment","className","id","placeholder","onChange","Button","variant","disableElevation","startIcon","RouteIcon","onClick","alert","map","key","index","Xarrow","start","end","curveness","color","strokeWidth","showHead","headSize","SummaryView","wanted","flagged","potentialFlag","inputArray","wantedItemsArray","ItemIngredients","undefined","IngredientsTagPage","handleInput","inputString","handleWantedItems","wantedItemsString","handleFlaggedItems","flaggedItemsString","LocalOfferIcon","AboutPage","CommonIngredientsPage","findCommonIngredients","commonIngredientsMap","Map","items","forEach","item","ingredients","has","nameArray","get","name","set","commonIngredientsMapSorted","entries","sort","console","log","ingredientsMap","commonIngredientsFormatter","startColor","endColor","RGBdiff","stepsPerc","rValue","Math","round","gValue","bValue","colorRGB","width","title","join","addItem","inputName","input","newItem","document","getElementById","prevState","deleteItem","itemToDelete","currentTarget","newItemArray","filter","handleInputName","displayItem","display","overflowWrap","verticalAlign","IconButton","aria-label","HighlightOffIcon","mapKeys","Array","from","keys","AddIcon","App","pageDisplayReset","pageAbout","pageTag","pageMatch","pageCommon","InfoIcon","disabled","CompareArrowsIcon","SearchIcon","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2d116920.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Xarrow from 'react-xarrows';\r\nimport './../App.css';\r\n\r\n//Material UI\r\nimport Button from '@mui/material/Button';\r\nimport RouteIcon from '@mui/icons-material/Route';\r\n\r\n\r\nclass IngredientsMatchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      leftInputString: \"\",\r\n      leftInputArray: [],\r\n      rightInputString: \"\",\r\n      rightInputArray: [],\r\n      leftInputName: \"Item A\",\r\n      rightInputName: \"Item B\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ \r\n    //   leftInputArray: [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"],\r\n    //   rightInputArray: [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"]\r\n    // });\r\n  }\r\n\r\n  itemFlagFormatter = (thisItem, flaggedItemsArray) => {\r\n    for (let i = 0; i < flaggedItemsArray.length; i++) {\r\n      if (thisItem.toLowerCase() === flaggedItemsArray[i].toLowerCase()) {\r\n        //exact matches\r\n        return <div style={{backgroundColor: \"lightblue\", borderColor: \"red\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      } else if (thisItem.toLowerCase().includes(flaggedItemsArray[i].toLowerCase())) {\r\n        //contains matching phrase\r\n        return <div style={{backgroundColor: \"yellow\", borderColor: \"orange\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      }\r\n    }\r\n    return <div>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n  handleLeftInputName = (event) => {\r\n    this.setState({ leftInputName: event.target.value });\r\n  }\r\n\r\n  handleRightInputName = (event) => {\r\n    this.setState({ rightInputName: event.target.value });\r\n  }\r\n\r\n  handleLeftInput = (event) => {\r\n    this.setState({ leftInputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleRightInput = (event) => {\r\n    this.setState({ rightInputString: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n    // var a = [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"];\r\n    // var b = [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"];\r\n    var a = this.state.leftInputArray\r\n    var b = this.state.rightInputArray;\r\n    var matchingIndex = [];\r\n    for (var i = 0; i < a.length; i++) {\r\n      matchingIndex[i] = -1; //defaults from no match\r\n      for (var j = 0; j < b.length; j++) {\r\n        if (a[i].toLowerCase() === b[j].toLowerCase()) {\r\n          matchingIndex[i] = j;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          \r\n        <div className=\"input-split\">  \r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              id=\"itemMatch-left-name\"\r\n              placeholder=\"item name\"\r\n              onChange={this.handleLeftInputName}\r\n              ></input>\r\n          </div>    \r\n          <div className=\"input-wrapper\">\r\n            <textarea \r\n                id=\"itemMatch-left\"\r\n                placeholder=\"paste the list of ingredients here\"\r\n                onChange={this.handleLeftInput}\r\n                ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-split\">\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              id=\"itemMatch-right-name\"\r\n              placeholder=\"item name\"\r\n              onChange={this.handleRightInputName}\r\n              ></input>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <textarea \r\n              id=\"itemMatch-right\"\r\n              placeholder=\"paste the list of ingredients here\"\r\n              onChange={this.handleRightInput}\r\n              ></textarea>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          startIcon={<RouteIcon/>}\r\n          className=\"compute-button\"\r\n          onClick={() => {\r\n            if (this.state.leftInputString !== \"\" && this.state.rightInputString) {\r\n              this.setState({\r\n                leftInputArray: this.convertStringToArray(this.state.leftInputString),\r\n                rightInputArray: this.convertStringToArray(this.state.rightInputString)\r\n              });\r\n            } else {\r\n              alert(\"Remember to input 2 ingredients lists\");\r\n            }\r\n            \r\n          }}\r\n          >Match product ingredients</Button>\r\n\r\n          <div className=\"result\">\r\n            <div className=\"ingredients-matching\" id=\"left\" >\r\n              {matchingIndex.length > 0 && <h2>{this.state.leftInputName}</h2>}\r\n              {a.map((key, index) => <div className=\"ingredients\" id={\"left\" + index} >{key}</div>)}\r\n            </div>\r\n\r\n            <div className=\"ingredients-matching\" id=\"canvas\">\r\n              \r\n              {matchingIndex.map((key, index) => {\r\n                if (key !== -1) {\r\n                  return <Xarrow start={\"left\" + index} end={\"right\" + key} \r\n                            curveness=\"0\" \r\n                            color=\"cornflowerblue\"\r\n                            strokeWidth=\"2\"\r\n                            showHead={false}\r\n                            headSize=\"0\"\r\n                          />;\r\n                }\r\n                return null;\r\n              })}\r\n            </div>\r\n            \r\n            <div className=\"ingredients-matching\" id=\"right\" >\r\n            {matchingIndex.length > 0 && <h2>{this.state.rightInputName}</h2>}\r\n              {b.map((key, index) => <div className=\"ingredients\" id={\"right\" + index} >{key}</div>)}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsMatchPage;\r\n","import React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\nclass SummaryView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var wanted = 0;\r\n    var flagged = 0;\r\n    var potentialFlag = 0;\r\n\r\n    for (let i = 0; i < this.props.inputArray.length; i++) {\r\n      for (let j = 0; j < this.props.wantedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.wantedItemsArray[j].toLowerCase())) {\r\n          wanted++;\r\n        }\r\n      }\r\n      for (let j = 0; j < this.props.flaggedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          flagged++;\r\n        } else if (this.props.inputArray[i].toLowerCase().includes(this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          potentialFlag++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"summary\">\r\n          {this.props.inputArray.length !== 0\r\n          ? \r\n          <React.Fragment>\r\n            <div className=\"summary-stats\" id=\"stats-input\">\r\n              <h3>Total ingredients</h3>\r\n              <h2>{this.props.inputArray.length}</h2>\r\n            </div>\r\n            <div className=\"summary-stats wanted\" id=\"stats-wanted\">\r\n              <h3>Desired ingredients</h3>\r\n              <h2>{wanted}</h2> \r\n              <p>out of {this.props.wantedItemsArray.length} found</p>\r\n            </div>\r\n            <div className=\"summary-stats flagged\" id=\"stats-flagged\">\r\n              <h3>Flagged ingredients</h3>\r\n              <h2>{flagged}</h2>\r\n              <p>out of {this.props.flaggedItemsArray.length} flagged</p>\r\n              <p>({potentialFlag} potentially unwanted items)</p>\r\n            </div>\r\n          </React.Fragment>\r\n          : <p>Summary cannot be displayed until there is an ingredients list.</p>\r\n          }\r\n          \r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SummaryView;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\n\r\nclass ItemIngredients extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  itemFlagFormatter = (thisItem) => {\r\n    if (this.props.flaggedItemsArray !== undefined) {\r\n      for (let i = 0; i < this.props.flaggedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === this.props.flaggedItemsArray[i].toLowerCase()) {\r\n          //exact matches\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"red\"}}>{thisItem}</div>;\r\n        } else if (this.props.flaggedItemsArray[i] !== \"\" && thisItem.toLowerCase().includes(this.props.flaggedItemsArray[i].toLowerCase())) {\r\n          //contains matching phrase\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"orange\"}}>{thisItem}</div>;\r\n        } \r\n      }\r\n    }\r\n    if (this.props.wantedItemsArray !== undefined) { \r\n      for (let i = 0; i < this.props.wantedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === (this.props.wantedItemsArray[i].toLowerCase())) {\r\n          //exact matches\r\n          return <div className=\"ingredients wanted\" style={{borderColor: \"green\"}}>{thisItem}</div>;\r\n        }\r\n      }\r\n    }\r\n    return <div className=\"ingredients\" style={{borderColor: \"aliceblue\"}}>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.inputArray !== undefined && this.props.inputArray.length > 0 &&\r\n        <div id=\"ingredients-list\">\r\n          {this.props.inputArray.map((i) => this.itemFlagFormatter(i))}\r\n        </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemIngredients;\r\n","import React, { Component } from 'react';\r\nimport SummaryView from './SummaryView';\r\nimport ItemIngredients from './ItemIngredients'\r\n\r\n//Material UI\r\nimport Button from '@mui/material/Button';\r\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\r\n\r\nclass IngredientsTagPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputString: \"\",\r\n      inputArray: [],\r\n      wantedItemsString: \"\",\r\n      wantedItemsArray: [],\r\n      flaggedItemsString: \"\",\r\n      flaggedItemsArray: [],\r\n    };\r\n  }\r\n\r\n\r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ inputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleWantedItems = (event) => {\r\n    this.setState({ wantedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  handleFlaggedItems = (event) => {\r\n    this.setState({ flaggedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"input input-wrapper\" id=\"input\">\r\n      <textarea \r\n        id=\"textarea-input\"\r\n        placeholder=\"paste the list of ingredients here\"\r\n        onChange={this.handleInput}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-wanted\">\r\n        <div className=\"input-wrapper wanted\">\r\n          <textarea \r\n            className=\"wanted\"\r\n            id=\"textarea-input-wanted\"\r\n            placeholder=\"paste wanted ingredients here\"\r\n            onChange={this.handleWantedItems}\r\n            ></textarea>\r\n        </div>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-flagged\">\r\n        <div className=\"input-wrapper flagged\">\r\n          <textarea \r\n            className=\"flagged\"\r\n            id=\"textarea-input-flagged\"\r\n            placeholder=\"paste unwanted ingredients here\"\r\n            onChange={this.handleFlaggedItems}\r\n            ></textarea>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\" \r\n        disableElevation\r\n        startIcon={<LocalOfferIcon/>}\r\n        className=\"compute-button\"\r\n        onClick={() => {\r\n          if (this.state.inputString !== \"\") {\r\n            this.setState({ inputArray: this.convertStringToArray(this.state.inputString) });\r\n            if (this.state.wantedItemsString !== \"\") {\r\n              this.setState({ wantedItemsArray: this.convertStringToArray(this.state.wantedItemsString) });\r\n            }\r\n            if (this.state.flaggedItemsString !== \"\") {\r\n              this.setState({ flaggedItemsArray: this.convertStringToArray(this.state.flaggedItemsString) });\r\n            }\r\n          } else {\r\n            alert(\"Remember to input an ingredients list\");\r\n          }\r\n          \r\n        }}\r\n        >Tag Ingredients</Button>\r\n      <div className=\"result\">\r\n        <h3>Product Summary:</h3>\r\n        <SummaryView\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n          />\r\n        <ItemIngredients\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n        />\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsTagPage;\r\n","import React, { Component } from 'react';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Welcome to BetterLabel!</h2>\r\n        <p>BetterLabel is here to help reading labels easier than before. See the FAQ section on how to use BetterLabel 😊</p>\r\n        <div>\r\n          BetterLabel can help you:\r\n          <ul>\r\n            <li><strong>tag wanted and unwanted ingredients</strong> from an ingredients list</li>\r\n            <li><strong>compare ingredients</strong> between 2 products</li>\r\n            <li><strong>find common ingredients</strong> between unlimited number of products</li>\r\n          </ul>\r\n          <br/>\r\n          \r\n        </div>\r\n\r\n        <div>\r\n          <h3>F.A.Q.</h3>\r\n          Q. Is my data being sent anywhere?\r\n          <br/>\r\n          A. No. BetterLabel is a client-based website developed using ReactJS. The calculations are all made on your browser, so no data is being exchanged to any remote server.\r\n          <br/>\r\n          <br/>\r\n          Q. How do I tag ingredients from a list?\r\n          <br/>\r\n          A. Simply type down the name of the ingredient to the wanted/unwanted ingredient box. To tag multiple ingredients, type down a comma-separated list. Then, copy and paste the ingredient list on the bottom text box. Ingredient names are not case-sensitive, but alternate name (e.g. water vs. aqua) may not be tagged correctly.\r\n          <br/>\r\n          <br/>\r\n          Q. How do I compare ingredients between products?\r\n          <br/>\r\n          A. BetterLabel can help compare the relative rankings of ingredients between 2 products. Copy and paste a comma-separated ingredient list on each side. The product name is optional. Product's ingredients list are ordered by predominance by weight, meaning there is a geater amount of the ingredient that appears earlier in the list compared to one that appears later. Note that the ingredients are listed relative to each oither in that specific product only.\r\n          <br/>\r\n          <br/>\r\n          Q. How do I find common ingredients from multiple products?\r\n          <br/>\r\n          A. Input the item name and ingredient list and click the button to add that particular item to the pool of items. Each item will be represented by its name. As more items are added, a cumulative list of ingredients will appear at the bottom in descending order of frequency. \r\n          <br/>\r\n\r\n        </div>\r\n        \r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AboutPage;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\n//Material UI\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\n\r\nclass CommonIngredientsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //items: [{}]\r\n      // {name: \"\", ingredients: [a, b, c...]}\r\n      items: [],\r\n      ingredientsMap: new Map(),\r\n      input: \"\",\r\n      inputName: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  findCommonIngredients = () => {\r\n    var commonIngredientsMap = new Map();\r\n    this.state.items.forEach(item => {\r\n      var keys = item.ingredients;\r\n      keys.forEach(key => {\r\n        if (commonIngredientsMap.has(key)) {\r\n          var nameArray = commonIngredientsMap.get(key);\r\n          nameArray.push(item.name);\r\n          commonIngredientsMap.set(key, nameArray);\r\n        } else {\r\n          commonIngredientsMap.set(key, [item.name]);\r\n        }\r\n      })\r\n    })\r\n    // sort by descending value\r\n    const commonIngredientsMapSorted = new Map(\r\n      [...commonIngredientsMap.entries()].sort((a, b) => b[1].length - a[1].length)\r\n    );\r\n    console.log(commonIngredientsMapSorted);\r\n    this.setState({ ingredientsMap: commonIngredientsMapSorted });\r\n\r\n    this.state.ingredientsMap.forEach((item) => console.log(this.state.ingredientsMap.get(item.key)));\r\n  }\r\n\r\n \r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  commonIngredientsFormatter = (thisItem) => {\r\n    //color in rgb() format\r\n    const startColor = [255,255,255]; // color for least common\r\n    const endColor = [31,147,213]; // color for most common\r\n    var RGBdiff = [\r\n      endColor[0] - startColor[0],\r\n      endColor[1] - startColor[1],\r\n      endColor[2] - startColor[2]\r\n    ];\r\n    \r\n    var stepsInt = this.state.items.length; //the number of steps in the gradient\r\n    var stepsPerc = 100 / (stepsInt); //the percentage representation of the step\r\n\r\n    var i = this.state.ingredientsMap.get(thisItem).length;\r\n    var rValue = (RGBdiff[0] > 0) \r\n    ? Math.round(RGBdiff[0] / 100 * (stepsPerc * (i - 1)))\r\n    : Math.round((startColor[0] + (RGBdiff[0]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    var gValue = (RGBdiff[1] > 0) \r\n      ? Math.round(RGBdiff[1] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[1] + (RGBdiff[1]) / 100 * (stepsPerc * (i - 1))));\r\n      \r\n    var bValue = (RGBdiff[2] > 0) \r\n      ? Math.round(RGBdiff[2] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[2] + (RGBdiff[2]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    console.log(rValue + \"-\" + gValue + \"-\" + bValue);\r\n    var colorRGB = \"rgb(\" + rValue + ',' + gValue + ',' + bValue + \")\";\r\n\r\n    return (\r\n      <div className=\"ingredients commontooltip\" style={{borderColor: \"aliceblue\", backgroundColor: colorRGB, width: \"30em\"}} title={i + \" source item(s): \" + this.state.ingredientsMap.get(thisItem).join(', ')}>\r\n        {thisItem}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  addItem = () => {\r\n    if (this.state.inputName !== \"\" && this.state.input !== \"\") {\r\n      var itemName = this.state.inputName; \r\n      var ingredientsArray = this.convertStringToArray(this.state.input);\r\n      const newItem = {\r\n        name: itemName,\r\n        ingredients: ingredientsArray\r\n      };\r\n\r\n      document.getElementById(\"commoningredients-name\").value = '';\r\n      document.getElementById(\"commoningredients-input\").value = '';\r\n\r\n      this.setState( prevState => ({ \r\n        items: [...prevState.items, newItem],\r\n        input: \"\",\r\n        inputName: \"\"\r\n      }), () => {\r\n        this.findCommonIngredients()\r\n      });\r\n    } else {\r\n      alert(\"Please input name AND ingredients list to add item\");\r\n    }\r\n    \r\n  }\r\n\r\n  deleteItem = (event) => {\r\n    var itemToDelete = event.currentTarget.value;\r\n    const newItemArray = this.state.items.filter((thisItem) => thisItem.name !== itemToDelete);\r\n    this.setState({ \r\n      items: newItemArray \r\n    }, () => {\r\n      this.findCommonIngredients()\r\n    });\r\n  }\r\n\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n\r\n  handleInputName = (event) => {\r\n    this.setState({ inputName: event.target.value });\r\n  }\r\n\r\n  \r\n  displayItem = (item) => {\r\n    return (\r\n      <div key={item.name} className=\"commonIngredientItem\">\r\n        <div style={{display: \"inline-block\", width: \"90%\", overflowWrap: \"break-word\", verticalAlign: \"top\"}}>\r\n          {item.name} \r\n        </div>\r\n        <div style={{display: \"inline-block\", width: \"10%\"}}>\r\n          <IconButton aria-label=\"delete\" value={item.name} onClick={this.deleteItem}>\r\n            <HighlightOffIcon/>\r\n          </IconButton>\r\n        </div>\r\n        \r\n        {/* <div>[{item.ingredients.join(\", \")}]</div> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let mapKeys = Array.from( this.state.ingredientsMap.keys() );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          {this.state.items.map((item) => this.displayItem(item))}\r\n        </div>\r\n          \r\n        <div>\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              id=\"commoningredients-name\"\r\n              placeholder=\"item name\"\r\n              onChange={this.handleInputName}\r\n              ></input>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <textarea \r\n              id=\"commoningredients-input\"\r\n              placeholder=\"place list of ingredients\"\r\n              onChange={this.handleInput}\r\n              ></textarea>\r\n          </div>\r\n          <Button \r\n            variant=\"contained\" \r\n            disableElevation\r\n            startIcon={<AddIcon />}\r\n            className=\"compute-button\"\r\n            onClick={this.addItem}>\r\n            Add this item\r\n          </Button>\r\n        </div>\r\n        \r\n        <div className=\"result\">\r\n          <h3>Common ingredients in descending order:</h3>\r\n          {this.state.items.length !== 0\r\n            ? <p>hover on each ingredient to see source item(s)</p>\r\n            : <p><i>no ingredients to display</i></p>\r\n          }\r\n          {this.state.ingredientsMap.length !== 0 &&\r\n          mapKeys.map((item) => this.commonIngredientsFormatter(item))}\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CommonIngredientsPage;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n//Components\r\nimport IngredientsMatchPage from './Components/IngredientsMatchPage';\r\nimport IngredientsTagPage from './Components/IngredientsTagPage';\r\nimport AboutPage from './Components/AboutPage';\r\nimport CommonIngredientsPage from './Components/CommonIngredientsPage';\r\n\r\n// Material UI\r\nimport Button from '@mui/material/Button';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pageAbout: true,\r\n      pageTag: false,\r\n      pageMatch: false,\r\n      pageCommon: false      \r\n    };\r\n  }\r\n\r\n  pageDisplayReset = () => {\r\n    this.setState({\r\n      pageAbout: false,\r\n      pageTag: false,\r\n      pageMatch: false,\r\n      pageCommon: false  \r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <div><h1>BetterLabel</h1></div>\r\n        <div id=\"navigation\">\r\n          <Button \r\n            variant=\"outlined\"\r\n            disableElevation\r\n            startIcon={<InfoIcon/>}\r\n            disabled={this.state.pageAbout}\r\n            onClick={() => {\r\n            this.pageDisplayReset();\r\n            this.setState({ pageAbout: true });\r\n          }}>About</Button>\r\n          <Button \r\n            variant=\"outlined\"\r\n            disableElevation\r\n            startIcon={<LocalOfferIcon/>}\r\n            disabled={this.state.pageTag}\r\n            onClick={() => {\r\n            this.pageDisplayReset();\r\n            this.setState({ pageTag: true });\r\n          }}>Tag Ingredients</Button>\r\n          <Button \r\n            variant=\"outlined\"\r\n            disableElevation\r\n            startIcon={<CompareArrowsIcon/>}\r\n            disabled={this.state.pageMatch}\r\n            onClick={() => {\r\n            this.pageDisplayReset();\r\n            this.setState({ pageMatch: true });\r\n          }}>Compare Products</Button>\r\n          <Button \r\n            variant=\"outlined\"\r\n            disableElevation\r\n            startIcon={<SearchIcon/>}\r\n            disabled={this.state.pageCommon}\r\n            onClick={() => {\r\n            this.pageDisplayReset();\r\n            this.setState({ pageCommon: true });\r\n          }}>Find Common Ingredients</Button>\r\n        </div>\r\n        <div id=\"content\">\r\n          {this.state.pageAbout && <AboutPage/>}\r\n          {this.state.pageTag && <IngredientsTagPage/>}\r\n          {this.state.pageMatch && <IngredientsMatchPage/>}\r\n          {this.state.pageCommon && <CommonIngredientsPage/>}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["Components/IngredientsMatchPage.js","Components/SummaryView.js","Components/ItemIngredients.js","Components/IngredientsTagPage.js","Components/AboutPage.js","Components/CommonIngredientsPage.js","App.js","index.js"],"names":["IngredientsMatchPage","props","itemFlagFormatter","thisItem","flaggedItemsArray","i","length","toLowerCase","style","backgroundColor","borderColor","borderStyle","includes","convertStringToArray","listAsString","split","replaceAll","trimmed","push","trim","handleLeftInputName","event","setState","leftInputName","target","value","handleRightInputName","rightInputName","handleLeftInput","leftInputString","handleRightInput","rightInputString","state","leftInputArray","rightInputArray","a","this","b","matchingIndex","j","Fragment","className","id","placeholder","onChange","Button","variant","disableElevation","onClick","alert","map","key","index","start","end","curveness","color","strokeWidth","showHead","headSize","Component","SummaryView","wanted","flagged","potentialFlag","inputArray","wantedItemsArray","ItemIngredients","undefined","IngredientsTagPage","handleInput","inputString","handleWantedItems","wantedItemsString","handleFlaggedItems","flaggedItemsString","AboutPage","CommonIngredientsPage","findCommonIngredients","commonIngredientsMap","Map","items","forEach","item","ingredients","has","nameArray","get","name","set","commonIngredientsMapSorted","entries","sort","console","log","ingredientsMap","commonIngredientsFormatter","startColor","endColor","RGBdiff","stepsPerc","rValue","Math","round","gValue","bValue","colorRGB","width","title","join","addItem","inputName","input","newItem","document","getElementById","prevState","deleteItem","itemToDelete","currentTarget","newItemArray","filter","handleInputName","displayItem","display","overflowWrap","verticalAlign","IconButton","mapKeys","Array","from","keys","startIcon","App","pageDisplayReset","pageAbout","pageTag","pageMatch","pageCommon","disabled","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.70b62c4a.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Xarrow from 'react-xarrows';\r\nimport './../App.css';\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nclass IngredientsMatchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      leftInputString: \"\",\r\n      leftInputArray: [],\r\n      rightInputString: \"\",\r\n      rightInputArray: [],\r\n      leftInputName: \"Item A\",\r\n      rightInputName: \"Item B\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ \r\n    //   leftInputArray: [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"],\r\n    //   rightInputArray: [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"]\r\n    // });\r\n  }\r\n\r\n  itemFlagFormatter = (thisItem, flaggedItemsArray) => {\r\n    for (let i = 0; i < flaggedItemsArray.length; i++) {\r\n      if (thisItem.toLowerCase() === flaggedItemsArray[i].toLowerCase()) {\r\n        //exact matches\r\n        return <div style={{backgroundColor: \"lightblue\", borderColor: \"red\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      } else if (thisItem.toLowerCase().includes(flaggedItemsArray[i].toLowerCase())) {\r\n        //contains matching phrase\r\n        return <div style={{backgroundColor: \"yellow\", borderColor: \"orange\", borderStyle: \"solid\"}}>{thisItem}</div>;\r\n      }\r\n    }\r\n    return <div>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n  handleLeftInputName = (event) => {\r\n    this.setState({ leftInputName: event.target.value });\r\n  }\r\n\r\n  handleRightInputName = (event) => {\r\n    this.setState({ rightInputName: event.target.value });\r\n  }\r\n\r\n  handleLeftInput = (event) => {\r\n    this.setState({ leftInputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleRightInput = (event) => {\r\n    this.setState({ rightInputString: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n    // var a = [\"Sodium Chloride\", \"Sodium Citrate\", \"Citric Acid\", \"Sodium Laureth Sulfate\", \"Sodium Lauryl Sulfate\", \"fragrance\"];\r\n    // var b = [\"Sodium Citrate\", \"Citric not Acid\", \"Sodium Lauryl Sulfate\", \"oil\", \"Sodium Chloride\", \"Sodium Laureth Sulfate\"];\r\n    var a = this.state.leftInputArray\r\n    var b = this.state.rightInputArray;\r\n    var matchingIndex = [];\r\n    for (var i = 0; i < a.length; i++) {\r\n      matchingIndex[i] = -1; //defaults from no match\r\n      for (var j = 0; j < b.length; j++) {\r\n        if (a[i].toLowerCase() === b[j].toLowerCase()) {\r\n          matchingIndex[i] = j;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          \r\n        <div className=\"input-split\">  \r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              id=\"itemMatch-left-name\"\r\n              placeholder=\"item name\"\r\n              onChange={this.handleLeftInputName}\r\n              ></input>\r\n          </div>    \r\n          <div className=\"input-wrapper\">\r\n            <textarea \r\n                id=\"itemMatch-left\"\r\n                placeholder=\"paste the list of ingredients here\"\r\n                onChange={this.handleLeftInput}\r\n                ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-split\">\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              id=\"itemMatch-right-name\"\r\n              placeholder=\"item name\"\r\n              onChange={this.handleRightInputName}\r\n              ></input>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <textarea \r\n              id=\"itemMatch-right\"\r\n              placeholder=\"paste the list of ingredients here\"\r\n              onChange={this.handleRightInput}\r\n              ></textarea>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          className=\"compute-button\"\r\n          onClick={() => {\r\n            if (this.state.leftInputString !== \"\" && this.state.rightInputString) {\r\n              this.setState({\r\n                leftInputArray: this.convertStringToArray(this.state.leftInputString),\r\n                rightInputArray: this.convertStringToArray(this.state.rightInputString)\r\n              });\r\n            } else {\r\n              alert(\"Remember to input 2 ingredients lists\");\r\n            }\r\n            \r\n          }}\r\n          >Match product ingredients</Button>\r\n\r\n          <div className=\"result\">\r\n            <div className=\"ingredients-matching\" id=\"left\" >\r\n              {matchingIndex.length > 0 && <h2>{this.state.leftInputName}</h2>}\r\n              {a.map((key, index) => <div className=\"ingredients\" id={\"left\" + index} >{key}</div>)}\r\n            </div>\r\n\r\n            <div className=\"ingredients-matching\" id=\"canvas\">\r\n              \r\n              {matchingIndex.map((key, index) => {\r\n                if (key !== -1) {\r\n                  return <Xarrow start={\"left\" + index} end={\"right\" + key} \r\n                            curveness=\"0\" \r\n                            color=\"cornflowerblue\"\r\n                            strokeWidth=\"2\"\r\n                            showHead={false}\r\n                            headSize=\"0\"\r\n                          />;\r\n                }\r\n                return null;\r\n              })}\r\n            </div>\r\n            \r\n            <div className=\"ingredients-matching\" id=\"right\" >\r\n            {matchingIndex.length > 0 && <h2>{this.state.rightInputName}</h2>}\r\n              {b.map((key, index) => <div className=\"ingredients\" id={\"right\" + index} >{key}</div>)}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsMatchPage;\r\n","import React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\nclass SummaryView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var wanted = 0;\r\n    var flagged = 0;\r\n    var potentialFlag = 0;\r\n\r\n    for (let i = 0; i < this.props.inputArray.length; i++) {\r\n      for (let j = 0; j < this.props.wantedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.wantedItemsArray[j].toLowerCase())) {\r\n          wanted++;\r\n        }\r\n      }\r\n      for (let j = 0; j < this.props.flaggedItemsArray.length; j++) {\r\n        if (this.props.inputArray[i].toLowerCase() === (this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          flagged++;\r\n        } else if (this.props.inputArray[i].toLowerCase().includes(this.props.flaggedItemsArray[j].toLowerCase())) {\r\n          potentialFlag++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"summary\">\r\n          {this.props.inputArray.length !== 0\r\n          ? \r\n          <React.Fragment>\r\n            <div className=\"summary-stats\" id=\"stats-input\">\r\n              <h3>Total ingredients</h3>\r\n              <h2>{this.props.inputArray.length}</h2>\r\n            </div>\r\n            <div className=\"summary-stats wanted\" id=\"stats-wanted\">\r\n              <h3>Desired ingredients</h3>\r\n              <h2>{wanted}</h2> \r\n              <p>out of {this.props.wantedItemsArray.length} found</p>\r\n            </div>\r\n            <div className=\"summary-stats flagged\" id=\"stats-flagged\">\r\n              <h3>Flagged ingredients</h3>\r\n              <h2>{flagged}</h2>\r\n              <p>out of {this.props.flaggedItemsArray.length} flagged</p>\r\n              <p>({potentialFlag} potentially unwanted items)</p>\r\n            </div>\r\n          </React.Fragment>\r\n          : <p>Summary cannot be displayed until there is an ingredients list.</p>\r\n          }\r\n          \r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SummaryView;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\n\r\n\r\nclass ItemIngredients extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  itemFlagFormatter = (thisItem) => {\r\n    if (this.props.flaggedItemsArray !== undefined) {\r\n      for (let i = 0; i < this.props.flaggedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === this.props.flaggedItemsArray[i].toLowerCase()) {\r\n          //exact matches\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"red\"}}>{thisItem}</div>;\r\n        } else if (this.props.flaggedItemsArray[i] !== \"\" && thisItem.toLowerCase().includes(this.props.flaggedItemsArray[i].toLowerCase())) {\r\n          //contains matching phrase\r\n          return <div className=\"ingredients flagged\" style={{borderColor: \"orange\"}}>{thisItem}</div>;\r\n        } \r\n      }\r\n    }\r\n    if (this.props.wantedItemsArray !== undefined) { \r\n      for (let i = 0; i < this.props.wantedItemsArray.length; i++) {\r\n        if (thisItem.toLowerCase() === (this.props.wantedItemsArray[i].toLowerCase())) {\r\n          //exact matches\r\n          return <div className=\"ingredients wanted\" style={{borderColor: \"green\"}}>{thisItem}</div>;\r\n        }\r\n      }\r\n    }\r\n    return <div className=\"ingredients\" style={{borderColor: \"aliceblue\"}}>{thisItem}</div>;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.inputArray !== undefined && this.props.inputArray.length > 0 &&\r\n        <div id=\"ingredients-list\">\r\n          {this.props.inputArray.map((i) => this.itemFlagFormatter(i))}\r\n        </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemIngredients;\r\n","import React, { Component } from 'react';\r\nimport SummaryView from './SummaryView';\r\nimport ItemIngredients from './ItemIngredients'\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nclass IngredientsTagPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputString: \"\",\r\n      inputArray: [],\r\n      wantedItemsString: \"\",\r\n      wantedItemsArray: [],\r\n      flaggedItemsString: \"\",\r\n      flaggedItemsArray: [],\r\n    };\r\n  }\r\n\r\n\r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ inputString: event.target.value });\r\n  }\r\n\r\n\r\n  handleWantedItems = (event) => {\r\n    this.setState({ wantedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  handleFlaggedItems = (event) => {\r\n    this.setState({ flaggedItemsString: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"input input-wrapper\" id=\"input\">\r\n      <textarea \r\n        id=\"textarea-input\"\r\n        placeholder=\"paste the list of ingredients here\"\r\n        onChange={this.handleInput}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-wanted\">\r\n        <div className=\"input-wrapper wanted\">\r\n          <textarea \r\n            className=\"wanted\"\r\n            id=\"textarea-input-wanted\"\r\n            placeholder=\"paste wanted ingredients here\"\r\n            onChange={this.handleWantedItems}\r\n            ></textarea>\r\n        </div>\r\n      </div>\r\n      <div className=\"input-split\" id=\"input-flagged\">\r\n        <div className=\"input-wrapper flagged\">\r\n          <textarea \r\n            className=\"flagged\"\r\n            id=\"textarea-input-flagged\"\r\n            placeholder=\"paste unwanted ingredients here\"\r\n            onChange={this.handleFlaggedItems}\r\n            ></textarea>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\" \r\n        disableElevation\r\n        className=\"compute-button\"\r\n        onClick={() => {\r\n          if (this.state.inputString !== \"\") {\r\n            this.setState({ inputArray: this.convertStringToArray(this.state.inputString) });\r\n            if (this.state.wantedItemsString !== \"\") {\r\n              this.setState({ wantedItemsArray: this.convertStringToArray(this.state.wantedItemsString) });\r\n            }\r\n            if (this.state.flaggedItemsString !== \"\") {\r\n              this.setState({ flaggedItemsArray: this.convertStringToArray(this.state.flaggedItemsString) });\r\n            }\r\n          } else {\r\n            alert(\"Remember to input an ingredients list\");\r\n          }\r\n          \r\n        }}\r\n        >Tag my Ingredients</Button>\r\n      <div className=\"result\">\r\n        <h3>Product Summary:</h3>\r\n        <SummaryView\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n          />\r\n        <ItemIngredients\r\n          inputArray = {this.state.inputArray}\r\n          flaggedItemsArray = {this.state.flaggedItemsArray}\r\n          wantedItemsArray = {this.state.wantedItemsArray}\r\n        />\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IngredientsTagPage;\r\n","import React, { Component } from 'react';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Welcome to BetterLabel™!</h2>\r\n        <p>BetterLabel™ is here to help reading labels easier than before.</p>\r\n        <div>\r\n          BetterLabel™ can help you:\r\n          <ul>\r\n            <li><strong>tag wanted and unwanted ingredients</strong> from an ingredients list</li>\r\n            <li><strong>compare ingredients</strong> between 2 products</li>\r\n            <li><strong>find common ingredients</strong> between unlimited number of products</li>\r\n          </ul>\r\n          <br/>\r\n          See the FAQ section on how to use BetterLabel™ 😊\r\n        </div>\r\n\r\n        <div>\r\n          Q. Is my data being sent anywhere?\r\n          <br/>\r\n          A. No. BetterLabel™ is a client-based website developed using ReactJS. The calculations are all made on your browser, so no data is being exchanged to any remote server.\r\n          <br/>\r\n          <br/>\r\n          Q. How do I tag ingredients from a list?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n          <br/>\r\n          Q. How do I compare ingredients between products?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n          <br/>\r\n          Q. How do I find common ingredients from multiple products?\r\n          <br/>\r\n          A. (pic + explanation)\r\n          <br/>\r\n\r\n        </div>\r\n        \r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AboutPage;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\n\r\nclass CommonIngredientsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //items: [{}]\r\n      // {name: \"\", ingredients: [a, b, c...]}\r\n      items: [],\r\n      ingredientsMap: new Map(),\r\n      input: \"\",\r\n      inputName: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  findCommonIngredients = () => {\r\n    var commonIngredientsMap = new Map();\r\n    this.state.items.forEach(item => {\r\n      var keys = item.ingredients;\r\n      keys.forEach(key => {\r\n        if (commonIngredientsMap.has(key)) {\r\n          var nameArray = commonIngredientsMap.get(key);\r\n          nameArray.push(item.name);\r\n          commonIngredientsMap.set(key, nameArray);\r\n        } else {\r\n          commonIngredientsMap.set(key, [item.name]);\r\n        }\r\n      })\r\n    })\r\n    // sort by descending value\r\n    const commonIngredientsMapSorted = new Map(\r\n      [...commonIngredientsMap.entries()].sort((a, b) => b[1].length - a[1].length)\r\n    );\r\n    console.log(commonIngredientsMapSorted);\r\n    this.setState({ ingredientsMap: commonIngredientsMapSorted });\r\n\r\n    this.state.ingredientsMap.forEach((item) => console.log(this.state.ingredientsMap.get(item.key)));\r\n  }\r\n\r\n \r\n  convertStringToArray = (listAsString) => {\r\n    var replaceFullstop = listAsString.replaceAll('.', ' ');\r\n    var split = replaceFullstop.split(\",\"); \r\n    var trimmed = [];\r\n\r\n    for (let i = 0; i < split.length; i++) {\r\n      trimmed.push(split[i].trim());\r\n    }\r\n    return trimmed;\r\n  }\r\n\r\n\r\n  commonIngredientsFormatter = (thisItem) => {\r\n    //color in rgb() format\r\n    const startColor = [255,255,255]; // color for least common\r\n    const endColor = [31,147,213]; // color for most common\r\n    var RGBdiff = [\r\n      endColor[0] - startColor[0],\r\n      endColor[1] - startColor[1],\r\n      endColor[2] - startColor[2]\r\n    ];\r\n    \r\n    var stepsInt = this.state.items.length; //the number of steps in the gradient\r\n    var stepsPerc = 100 / (stepsInt); //the percentage representation of the step\r\n\r\n    var i = this.state.ingredientsMap.get(thisItem).length;\r\n    var rValue = (RGBdiff[0] > 0) \r\n    ? Math.round(RGBdiff[0] / 100 * (stepsPerc * (i - 1)))\r\n    : Math.round((startColor[0] + (RGBdiff[0]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    var gValue = (RGBdiff[1] > 0) \r\n      ? Math.round(RGBdiff[1] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[1] + (RGBdiff[1]) / 100 * (stepsPerc * (i - 1))));\r\n      \r\n    var bValue = (RGBdiff[2] > 0) \r\n      ? Math.round(RGBdiff[2] / 100 * (stepsPerc * (i - 1))) \r\n      : Math.round((startColor[2] + (RGBdiff[2]) / 100 * (stepsPerc * (i - 1))));\r\n    \r\n    console.log(rValue + \"-\" + gValue + \"-\" + bValue);\r\n    var colorRGB = \"rgb(\" + rValue + ',' + gValue + ',' + bValue + \")\";\r\n\r\n    return (\r\n      <div className=\"ingredients commontooltip\" style={{borderColor: \"aliceblue\", backgroundColor: colorRGB, width: \"30em\"}} title={i + \" source item(s): \" + this.state.ingredientsMap.get(thisItem).join(', ')}>\r\n        {thisItem}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  addItem = () => {\r\n    if (this.state.inputName !== \"\" && this.state.input !== \"\") {\r\n      var itemName = this.state.inputName; \r\n      var ingredientsArray = this.convertStringToArray(this.state.input);\r\n      const newItem = {\r\n        name: itemName,\r\n        ingredients: ingredientsArray\r\n      };\r\n\r\n      document.getElementById(\"commoningredients-name\").value = '';\r\n      document.getElementById(\"commoningredients-input\").value = '';\r\n\r\n      this.setState( prevState => ({ \r\n        items: [...prevState.items, newItem],\r\n        input: \"\",\r\n        inputName: \"\"\r\n      }), () => {\r\n        this.findCommonIngredients()\r\n      });\r\n    } else {\r\n      alert(\"Please input name AND ingredients list to add item\");\r\n    }\r\n    \r\n  }\r\n\r\n  deleteItem = (event) => {\r\n    var itemToDelete = event.currentTarget.value;\r\n    const newItemArray = this.state.items.filter((thisItem) => thisItem.name !== itemToDelete);\r\n    this.setState({ \r\n      items: newItemArray \r\n    }, () => {\r\n      this.findCommonIngredients()\r\n    });\r\n  }\r\n\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n\r\n  handleInputName = (event) => {\r\n    this.setState({ inputName: event.target.value });\r\n  }\r\n\r\n  \r\n  displayItem = (item) => {\r\n    return (\r\n      <div key={item.name} className=\"commonIngredientItem\">\r\n        <div style={{display: \"inline-block\", width: \"90%\", overflowWrap: \"break-word\", verticalAlign: \"top\"}}>\r\n          {item.name} \r\n        </div>\r\n        <div style={{display: \"inline-block\", width: \"10%\"}}>\r\n          <IconButton aria-label=\"delete\" value={item.name} onClick={this.deleteItem}>\r\n            <HighlightOffIcon/>\r\n          </IconButton>\r\n        </div>\r\n        \r\n        {/* <div>[{item.ingredients.join(\", \")}]</div> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let mapKeys = Array.from( this.state.ingredientsMap.keys() );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          {this.state.items.map((item) => this.displayItem(item))}\r\n        </div>\r\n          \r\n        <div>\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              id=\"commoningredients-name\"\r\n              placeholder=\"item name\"\r\n              onChange={this.handleInputName}\r\n              ></input>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <textarea \r\n              id=\"commoningredients-input\"\r\n              placeholder=\"place list of ingredients\"\r\n              onChange={this.handleInput}\r\n              ></textarea>\r\n          </div>\r\n          <Button \r\n            variant=\"contained\" \r\n            disableElevation\r\n            startIcon={<AddIcon />}\r\n            className=\"compute-button\"\r\n            onClick={this.addItem}>\r\n            Add this item\r\n          </Button>\r\n        </div>\r\n        \r\n        <div className=\"result\">\r\n          <h3>Common ingredients in descending order:</h3>\r\n          {this.state.items.length !== 0\r\n            ? <p>hover on each ingredient to see source item(s)</p>\r\n            : <p><i>no ingredients to display</i></p>\r\n          }\r\n          {this.state.ingredientsMap.length !== 0 &&\r\n          mapKeys.map((item) => this.commonIngredientsFormatter(item))}\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CommonIngredientsPage;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport IngredientsMatchPage from './Components/IngredientsMatchPage';\nimport IngredientsTagPage from './Components/IngredientsTagPage';\nimport AboutPage from './Components/AboutPage';\nimport CommonIngredientsPage from './Components/CommonIngredientsPage';\n\n// Material UI\nimport Button from '@mui/material/Button';\nimport InfoIcon from '@mui/icons-material/Info';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pageAbout: true,\n      pageTag: false,\n      pageMatch: false,\n      pageCommon: false      \n    };\n  }\n\n  pageDisplayReset = () => {\n    this.setState({\n      pageAbout: false,\n      pageTag: false,\n      pageMatch: false,\n      pageCommon: false  \n    });\n  }\n\n  render() {\n    \n    return (\n      <React.Fragment>\n        <div><h1>BetterLabel™</h1></div>\n        <div id=\"navigation\">\n          <Button \n            variant=\"outlined\"\n            disableElevation\n            startIcon={<InfoIcon/>}\n            disabled={this.state.pageAbout}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageAbout: true });\n          }}>About</Button>\n          <Button \n            variant=\"outlined\"\n            disableElevation\n            disabled={this.state.pageTag}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageTag: true });\n          }}>Tag my Ingredients</Button>\n          <Button \n            variant=\"outlined\"\n            disableElevation\n            disabled={this.state.pageMatch}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageMatch: true });\n          }}>Compare Products</Button>\n          <Button \n            variant=\"outlined\"\n            disableElevation\n            disabled={this.state.pageCommon}\n            onClick={() => {\n            this.pageDisplayReset();\n            this.setState({ pageCommon: true });\n          }}>Find Common Ingredients</Button>\n        </div>\n        <div id=\"content\">\n          {this.state.pageAbout && <AboutPage/>}\n          {this.state.pageTag && <IngredientsTagPage/>}\n          {this.state.pageMatch && <IngredientsMatchPage/>}\n          {this.state.pageCommon && <CommonIngredientsPage/>}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}